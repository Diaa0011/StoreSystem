@model StoreSystem.Dtos.Store.StoreDetailsDto

<h1>Update Store - @Model.Name</h1>

<form method="post">
    <!-- Map container (at the top of the form) -->
    <div id="map" style="height: 300px; width: 100%; margin-bottom: 20px;"></div>

    <div class="form-group">
        <label for="Name">Store Name</label>
        <input type="text" class="form-control" id="Name" name="Name" value="@Model?.Name" required />
    </div>
    <div class="form-group">
        <label for="Address">Address</label>
        <input type="text" class="form-control" id="Address" name="Address" value="@Model?.Address" required />
    </div>
    <div class="form-group">
        <label for="PhoneNumber">Phone Number</label>
        <input type="text" class="form-control" id="PhoneNumber" name="PhoneNumber" value="@Model?.PhoneNumber" />
    </div>
    <div class="form-group">
        <label for="Latitude">Latitude</label>
        <input type="text" class="form-control" id="Latitude" name="Latitude" value="@Model?.Latitude" readonly />
    </div>
    <div class="form-group">
        <label for="Longitude">Longitude</label>
        <input type="text" class="form-control" id="Longitude" name="Longitude" value="@Model?.Longitude" readonly />
    </div>

    <!-- Update Store Button (Centered and Larger) -->
    <div class="text-center" style="margin-top: 10px;">
        <button type="submit" class="btn btn-primary" style="font-size: 1.25em; width: 25%;">Update Store</button>
        <!-- Cancel Button -->
        <a href="@Url.Action("Index", "Store")" class="btn btn-secondary" style="font-size: 1.25em; width: 25%; margin-left: 20px;">Cancel</a>
    </div>
</form>

<!-- Include Leaflet.js CSS -->
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />

<!-- Include Leaflet.js JS -->
<script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>

<script>
    // Initialize map at the store's current location (Latitude and Longitude from model)
    var lat = @Model?.Latitude ?? 31.2156; // Default to Alexandria coordinates if null
    var lon = @Model?.Longitude ?? 29.9553;

    var map = L.map('map').setView([lat, lon], 12);

    // Add OpenStreetMap tiles layer
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
    }).addTo(map);

    // Add a marker at the store's current location
    var marker = L.marker([lat, lon]).addTo(map);

    // Update Latitude and Longitude fields based on marker position
    marker.on('move', function (e) {
        var newLat = e.target.getLatLng().lat;
        var newLon = e.target.getLatLng().lng;

        document.getElementById('Latitude').value = newLat;
        document.getElementById('Longitude').value = newLon;
    });

    // Listen for clicks on the map to place the marker
    map.on('click', function (e) {
        var clickedLat = e.latlng.lat;
        var clickedLon = e.latlng.lng;

        // Move the marker to the clicked location
        marker.setLatLng([clickedLat, clickedLon]);

        // Update the latitude and longitude input fields
        document.getElementById('Latitude').value = clickedLat;
        document.getElementById('Longitude').value = clickedLon;
    });
</script>
